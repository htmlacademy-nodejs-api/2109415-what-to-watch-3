{"ast":null,"code":"import { createSelector } from '@reduxjs/toolkit';\nimport { NameSpace } from '../../const';\nexport const getActiveFilm = createSelector(state => state[NameSpace.Film], state => state.film);\nexport const getIsLoading = createSelector(state => state[NameSpace.Film], state => state.isLoading);\nexport const getIsFavorite = createSelector(state => state[NameSpace.Film], state => {\n  var _state$film$isFavorit, _state$film;\n  return (_state$film$isFavorit = (_state$film = state.film) === null || _state$film === void 0 ? void 0 : _state$film.isFavorite) !== null && _state$film$isFavorit !== void 0 ? _state$film$isFavorit : false;\n});","map":{"version":3,"names":["createSelector","NameSpace","getActiveFilm","state","Film","film","getIsLoading","isLoading","getIsFavorite","isFavorite"],"sources":["/Users/ivanmerkulov/Documents/GitHub/2109415-what-to-watch-3/frontend/src/store/film-data/selectors.ts"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\nimport { State, FilmState } from '../../types/state';\nimport { NameSpace } from '../../const';\n\nexport const getActiveFilm = createSelector(\n  (state: State) => state[NameSpace.Film],\n  (state: FilmState) => state.film\n);\n\nexport const getIsLoading = createSelector(\n  (state: State) => state[NameSpace.Film],\n  (state: FilmState) => state.isLoading\n);\n\nexport const getIsFavorite = createSelector(\n  (state: State) => state[NameSpace.Film],\n  (state: FilmState) => state.film?.isFavorite ?? false\n);\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AAEjD,SAASC,SAAS,QAAQ,aAAa;AAEvC,OAAO,MAAMC,aAAa,GAAGF,cAAc,CACxCG,KAAY,IAAKA,KAAK,CAACF,SAAS,CAACG,IAAI,CAAC,EACtCD,KAAgB,IAAKA,KAAK,CAACE,IAAI,CACjC;AAED,OAAO,MAAMC,YAAY,GAAGN,cAAc,CACvCG,KAAY,IAAKA,KAAK,CAACF,SAAS,CAACG,IAAI,CAAC,EACtCD,KAAgB,IAAKA,KAAK,CAACI,SAAS,CACtC;AAED,OAAO,MAAMC,aAAa,GAAGR,cAAc,CACxCG,KAAY,IAAKA,KAAK,CAACF,SAAS,CAACG,IAAI,CAAC,EACtCD,KAAgB;EAAA;EAAA,+CAAKA,KAAK,CAACE,IAAI,gDAAV,YAAYI,UAAU,yEAAI,KAAK;AAAA,EACtD"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/ivanmerkulov/Documents/GitHub/2109415-what-to-watch-3/frontend/src/pages/player-page/player-page.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport NotFoundPage from '../not-found-page/not-found-page';\nimport VideoPlayer from '../../components/video-player/video-player';\nimport Spinner from '../../components/spinner/spinner';\nimport { useAppSelector, useAppDispatch } from '../../hooks/';\nimport { getActiveFilm, getIsLoading } from '../../store/film-data/selectors';\nimport { fetchFilm } from '../../store/api-actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PlayerPage() {\n  _s();\n  const dispatch = useAppDispatch();\n  const {\n    id\n  } = useParams();\n  const film = useAppSelector(getActiveFilm);\n  const isLoading = useAppSelector(getIsLoading);\n  useEffect(() => {\n    if (!id) {\n      return;\n    }\n    if (id !== (film === null || film === void 0 ? void 0 : film.id)) {\n      dispatch(fetchFilm(id));\n    }\n  }, [dispatch, id, film === null || film === void 0 ? void 0 : film.id]);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  }\n  if (film) {\n    return /*#__PURE__*/_jsxDEV(VideoPlayer, {\n      film: film\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(NotFoundPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 10\n  }, this);\n}\n_s(PlayerPage, \"nxt1eEi8SpAVqk+Z64dB5drjkF4=\", false, function () {\n  return [useAppDispatch, useParams, useAppSelector, useAppSelector];\n});\n_c = PlayerPage;\nexport default PlayerPage;\nvar _c;\n$RefreshReg$(_c, \"PlayerPage\");","map":{"version":3,"names":["useEffect","useParams","NotFoundPage","VideoPlayer","Spinner","useAppSelector","useAppDispatch","getActiveFilm","getIsLoading","fetchFilm","PlayerPage","dispatch","id","film","isLoading"],"sources":["/Users/ivanmerkulov/Documents/GitHub/2109415-what-to-watch-3/frontend/src/pages/player-page/player-page.tsx"],"sourcesContent":["import { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport NotFoundPage from '../not-found-page/not-found-page';\nimport VideoPlayer from '../../components/video-player/video-player';\nimport Spinner from '../../components/spinner/spinner';\nimport { useAppSelector, useAppDispatch } from '../../hooks/';\nimport { getActiveFilm, getIsLoading } from '../../store/film-data/selectors';\nimport { fetchFilm } from '../../store/api-actions';\n\nfunction PlayerPage() {\n  const dispatch = useAppDispatch();\n  const { id } = useParams();\n  const film = useAppSelector(getActiveFilm);\n  const isLoading = useAppSelector(getIsLoading);\n\n  useEffect(() => {\n    if (!id) {\n      return;\n    }\n\n    if (id !== film?.id) {\n      dispatch(fetchFilm(id));\n    }\n  }, [dispatch, id, film?.id]);\n\n  if (isLoading) {\n    return <Spinner />;\n  }\n\n  if (film) {\n    return <VideoPlayer film={film} />;\n  }\n\n  return <NotFoundPage />;\n}\n\nexport default PlayerPage;\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,YAAY,MAAM,kCAAkC;AAC3D,OAAOC,WAAW,MAAM,4CAA4C;AACpE,OAAOC,OAAO,MAAM,kCAAkC;AACtD,SAASC,cAAc,EAAEC,cAAc,QAAQ,cAAc;AAC7D,SAASC,aAAa,EAAEC,YAAY,QAAQ,iCAAiC;AAC7E,SAASC,SAAS,QAAQ,yBAAyB;AAAC;AAEpD,SAASC,UAAU,GAAG;EAAA;EACpB,MAAMC,QAAQ,GAAGL,cAAc,EAAE;EACjC,MAAM;IAAEM;EAAG,CAAC,GAAGX,SAAS,EAAE;EAC1B,MAAMY,IAAI,GAAGR,cAAc,CAACE,aAAa,CAAC;EAC1C,MAAMO,SAAS,GAAGT,cAAc,CAACG,YAAY,CAAC;EAE9CR,SAAS,CAAC,MAAM;IACd,IAAI,CAACY,EAAE,EAAE;MACP;IACF;IAEA,IAAIA,EAAE,MAAKC,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAED,EAAE,GAAE;MACnBD,QAAQ,CAACF,SAAS,CAACG,EAAE,CAAC,CAAC;IACzB;EACF,CAAC,EAAE,CAACD,QAAQ,EAAEC,EAAE,EAAEC,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAED,EAAE,CAAC,CAAC;EAE5B,IAAIE,SAAS,EAAE;IACb,oBAAO,QAAC,OAAO;MAAA;MAAA;MAAA;IAAA,QAAG;EACpB;EAEA,IAAID,IAAI,EAAE;IACR,oBAAO,QAAC,WAAW;MAAC,IAAI,EAAEA;IAAK;MAAA;MAAA;MAAA;IAAA,QAAG;EACpC;EAEA,oBAAO,QAAC,YAAY;IAAA;IAAA;IAAA;EAAA,QAAG;AACzB;AAAC,GAzBQH,UAAU;EAAA,QACAJ,cAAc,EAChBL,SAAS,EACXI,cAAc,EACTA,cAAc;AAAA;AAAA,KAJzBK,UAAU;AA2BnB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/ivanmerkulov/Documents/GitHub/2109415-what-to-watch-3/frontend/src/components/video-player/video-player.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Spinner from '../spinner/spinner';\nimport { AppRoute } from '../../const';\nimport { formatRemainingTime } from '../../util';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction VideoPlayer(_ref) {\n  _s();\n  let {\n    film\n  } = _ref;\n  const navigate = useNavigate();\n  const videoRef = useRef(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [duration, setDuration] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0);\n  const {\n    posterImage,\n    videoLink,\n    name\n  } = film;\n  useEffect(() => {\n    var _videoRef$current, _videoRef$current2;\n    isPlaying ? (_videoRef$current = videoRef.current) === null || _videoRef$current === void 0 ? void 0 : _videoRef$current.play() : (_videoRef$current2 = videoRef.current) === null || _videoRef$current2 === void 0 ? void 0 : _videoRef$current2.pause();\n  }, [isPlaying]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isLoading && /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player\",\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        src: videoLink,\n        className: \"player__video\",\n        autoPlay: true,\n        poster: posterImage,\n        ref: videoRef,\n        onLoadedData: () => setIsLoading(false),\n        onTimeUpdate: evt => setCurrentTime(Math.round(evt.currentTarget.currentTime)),\n        onDurationChange: evt => setDuration(Math.round(evt.currentTarget.duration))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"player__exit\",\n        onClick: () => navigate(`${AppRoute.Film}/${film.id}`),\n        children: \"Exit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player__controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player__controls-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"player__time\",\n            children: [/*#__PURE__*/_jsxDEV(\"progress\", {\n              className: \"player__progress\",\n              value: currentTime,\n              max: duration\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"player__toggler\",\n              style: {\n                left: `${duration ? 100 / duration * currentTime : 0}%`\n              },\n              children: \"Toggler\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"player__time-value\",\n            children: formatRemainingTime(duration - currentTime)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player__controls-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"player__play\",\n            onClick: () => setIsPlaying(prevState => !prevState),\n            children: isPlaying ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                viewBox: \"0 0 14 21\",\n                width: \"14\",\n                height: \"21\",\n                children: /*#__PURE__*/_jsxDEV(\"use\", {\n                  xlinkHref: \"#pause\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Pause\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                viewBox: \"0 0 19 19\",\n                width: \"19\",\n                height: \"19\",\n                children: /*#__PURE__*/_jsxDEV(\"use\", {\n                  xlinkHref: \"#play-s\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Play\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"player__name\",\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"player__full-screen\",\n            onClick: () => {\n              var _videoRef$current3;\n              return (_videoRef$current3 = videoRef.current) === null || _videoRef$current3 === void 0 ? void 0 : _videoRef$current3.requestFullscreen();\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n              viewBox: \"0 0 27 27\",\n              width: \"27\",\n              height: \"27\",\n              children: /*#__PURE__*/_jsxDEV(\"use\", {\n                xlinkHref: \"#full-screen\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Full screen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(VideoPlayer, \"E0iNoH0NLEwfbjGCB5lI8djqwmo=\", false, function () {\n  return [useNavigate];\n});\n_c = VideoPlayer;\nexport default VideoPlayer;\nvar _c;\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"names":["useState","useEffect","useRef","useNavigate","Spinner","AppRoute","formatRemainingTime","VideoPlayer","film","navigate","videoRef","isPlaying","setIsPlaying","isLoading","setIsLoading","duration","setDuration","currentTime","setCurrentTime","posterImage","videoLink","name","current","play","pause","evt","Math","round","currentTarget","Film","id","left","prevState","requestFullscreen"],"sources":["/Users/ivanmerkulov/Documents/GitHub/2109415-what-to-watch-3/frontend/src/components/video-player/video-player.tsx"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Spinner from '../spinner/spinner';\nimport { Film } from '../../types/film';\nimport { AppRoute } from '../../const';\nimport { formatRemainingTime } from '../../util';\n\ntype VideoPlayerProps = {\n  film: Film;\n};\n\nfunction VideoPlayer({ film }: VideoPlayerProps) {\n  const navigate = useNavigate();\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [duration, setDuration] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0);\n\n  const { posterImage, videoLink, name } = film;\n\n  useEffect(() => {\n    isPlaying ? videoRef.current?.play() : videoRef.current?.pause();\n  }, [isPlaying]);\n\n  return (\n    <>\n      {isLoading && <Spinner />}\n      <div className=\"player\">\n        <video\n          src={videoLink}\n          className=\"player__video\"\n          autoPlay\n          poster={posterImage}\n          ref={videoRef}\n          onLoadedData={() => setIsLoading(false)}\n          onTimeUpdate={(evt) =>\n            setCurrentTime(Math.round(evt.currentTarget.currentTime))}\n          onDurationChange={(evt) =>\n            setDuration(Math.round(evt.currentTarget.duration))}\n        >\n        </video>\n\n        <button\n          type=\"button\"\n          className=\"player__exit\"\n          onClick={() => navigate(`${AppRoute.Film}/${film.id}`)}\n        >\n          Exit\n        </button>\n\n        <div className=\"player__controls\">\n          <div className=\"player__controls-row\">\n            <div className=\"player__time\">\n              <progress\n                className=\"player__progress\"\n                value={currentTime}\n                max={duration}\n              />\n              <div\n                className=\"player__toggler\"\n                style={{\n                  left: `${duration ? (100 / duration) * currentTime : 0}%`,\n                }}\n              >\n                Toggler\n              </div>\n            </div>\n            <div className=\"player__time-value\">\n              {formatRemainingTime(duration - currentTime)}\n            </div>\n          </div>\n\n          <div className=\"player__controls-row\">\n            <button\n              type=\"button\"\n              className=\"player__play\"\n              onClick={() => setIsPlaying((prevState) => !prevState)}\n            >\n              {isPlaying ? (\n                <>\n                  <svg viewBox=\"0 0 14 21\" width=\"14\" height=\"21\">\n                    <use xlinkHref=\"#pause\"></use>\n                  </svg>\n                  <span>Pause</span>\n                </>\n              ) : (\n                <>\n                  <svg viewBox=\"0 0 19 19\" width=\"19\" height=\"19\">\n                    <use xlinkHref=\"#play-s\"></use>\n                  </svg>\n                  <span>Play</span>\n                </>\n              )}\n            </button>\n            <div className=\"player__name\">{name}</div>\n\n            <button\n              type=\"button\"\n              className=\"player__full-screen\"\n              onClick={() => videoRef.current?.requestFullscreen()}\n            >\n              <svg viewBox=\"0 0 27 27\" width=\"27\" height=\"27\">\n                <use xlinkHref=\"#full-screen\"></use>\n              </svg>\n              <span>Full screen</span>\n            </button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default VideoPlayer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
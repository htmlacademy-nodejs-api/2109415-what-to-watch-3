{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { NameSpace, SubmitStatus } from '../../const';\nimport { fetchReviews, postReview } from '../api-actions';\nconst initialState = {\n  reviews: [],\n  isLoading: false,\n  submitStatus: SubmitStatus.Still\n};\nexport const reviewsData = createSlice({\n  name: NameSpace.Reviews,\n  initialState,\n  reducers: {},\n  extraReducers(builder) {\n    builder.addCase(fetchReviews.pending, state => {\n      state.isLoading = true;\n    }).addCase(fetchReviews.fulfilled, (state, action) => {\n      state.reviews = action.payload;\n      state.isLoading = false;\n    }).addCase(fetchReviews.rejected, state => {\n      state.isLoading = false;\n    }).addCase(postReview.pending, state => {\n      state.submitStatus = SubmitStatus.Pending;\n    }).addCase(postReview.fulfilled, (state, action) => {\n      state.reviews.push(action.payload);\n      state.submitStatus = SubmitStatus.Fullfilled;\n    }).addCase(postReview.rejected, state => {\n      state.submitStatus = SubmitStatus.Rejected;\n    });\n  }\n});","map":{"version":3,"names":["createSlice","NameSpace","SubmitStatus","fetchReviews","postReview","initialState","reviews","isLoading","submitStatus","Still","reviewsData","name","Reviews","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","Pending","push","Fullfilled","Rejected"],"sources":["/Users/ivanmerkulov/Documents/GitHub/2109415-what-to-watch-3/frontend/src/store/reviews-data/reviews-data.ts"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { NameSpace, SubmitStatus } from '../../const';\nimport { ReviewsState } from '../../types/state';\nimport { fetchReviews, postReview } from '../api-actions';\n\nconst initialState: ReviewsState = {\n  reviews: [],\n  isLoading: false,\n  submitStatus: SubmitStatus.Still,\n};\n\nexport const reviewsData = createSlice({\n  name: NameSpace.Reviews,\n  initialState,\n  reducers: {},\n  extraReducers(builder) {\n    builder\n      .addCase(fetchReviews.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(fetchReviews.fulfilled, (state, action) => {\n        state.reviews = action.payload;\n        state.isLoading = false;\n      })\n      .addCase(fetchReviews.rejected, (state) => {\n        state.isLoading = false;\n      })\n      .addCase(postReview.pending, (state) => {\n        state.submitStatus = SubmitStatus.Pending;\n      })\n      .addCase(postReview.fulfilled, (state, action) => {\n        state.reviews.push(action.payload);\n        state.submitStatus = SubmitStatus.Fullfilled;\n      })\n      .addCase(postReview.rejected, (state) => {\n        state.submitStatus = SubmitStatus.Rejected;\n      });\n  },\n});\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,EAAEC,YAAY,QAAQ,aAAa;AAErD,SAASC,YAAY,EAAEC,UAAU,QAAQ,gBAAgB;AAEzD,MAAMC,YAA0B,GAAG;EACjCC,OAAO,EAAE,EAAE;EACXC,SAAS,EAAE,KAAK;EAChBC,YAAY,EAAEN,YAAY,CAACO;AAC7B,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGV,WAAW,CAAC;EACrCW,IAAI,EAAEV,SAAS,CAACW,OAAO;EACvBP,YAAY;EACZQ,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,CAACC,OAAO,EAAE;IACrBA,OAAO,CACJC,OAAO,CAACb,YAAY,CAACc,OAAO,EAAGC,KAAK,IAAK;MACxCA,KAAK,CAACX,SAAS,GAAG,IAAI;IACxB,CAAC,CAAC,CACDS,OAAO,CAACb,YAAY,CAACgB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAClDF,KAAK,CAACZ,OAAO,GAAGc,MAAM,CAACC,OAAO;MAC9BH,KAAK,CAACX,SAAS,GAAG,KAAK;IACzB,CAAC,CAAC,CACDS,OAAO,CAACb,YAAY,CAACmB,QAAQ,EAAGJ,KAAK,IAAK;MACzCA,KAAK,CAACX,SAAS,GAAG,KAAK;IACzB,CAAC,CAAC,CACDS,OAAO,CAACZ,UAAU,CAACa,OAAO,EAAGC,KAAK,IAAK;MACtCA,KAAK,CAACV,YAAY,GAAGN,YAAY,CAACqB,OAAO;IAC3C,CAAC,CAAC,CACDP,OAAO,CAACZ,UAAU,CAACe,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAChDF,KAAK,CAACZ,OAAO,CAACkB,IAAI,CAACJ,MAAM,CAACC,OAAO,CAAC;MAClCH,KAAK,CAACV,YAAY,GAAGN,YAAY,CAACuB,UAAU;IAC9C,CAAC,CAAC,CACDT,OAAO,CAACZ,UAAU,CAACkB,QAAQ,EAAGJ,KAAK,IAAK;MACvCA,KAAK,CAACV,YAAY,GAAGN,YAAY,CAACwB,QAAQ;IAC5C,CAAC,CAAC;EACN;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { createSelector } from '@reduxjs/toolkit';\nimport { NameSpace } from '../../const';\nexport const getActiveGenre = createSelector(state => state[NameSpace.Genre], state => state.activeGenre);\nexport const getFilmsByGenre = createSelector(state => state[NameSpace.Genre], state => state.filmsByGenre);\nexport const getIsLoading = createSelector(state => state[NameSpace.Genre], state => state.isLoading);","map":{"version":3,"names":["createSelector","NameSpace","getActiveGenre","state","Genre","activeGenre","getFilmsByGenre","filmsByGenre","getIsLoading","isLoading"],"sources":["/Users/ivanmerkulov/Documents/GitHub/2109415-what-to-watch-3/frontend/src/store/genre-data/selectors.ts"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\nimport { State, GenreState } from '../../types/state';\nimport { NameSpace } from '../../const';\n\nexport const getActiveGenre = createSelector(\n  (state: State) => state[NameSpace.Genre],\n  (state: GenreState) => state.activeGenre\n);\n\nexport const getFilmsByGenre = createSelector(\n  (state: State) => state[NameSpace.Genre],\n  (state: GenreState) => state.filmsByGenre\n);\n\nexport const getIsLoading = createSelector(\n  (state: State) => state[NameSpace.Genre],\n  (state: GenreState) => state.isLoading\n);\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AAEjD,SAASC,SAAS,QAAQ,aAAa;AAEvC,OAAO,MAAMC,cAAc,GAAGF,cAAc,CACzCG,KAAY,IAAKA,KAAK,CAACF,SAAS,CAACG,KAAK,CAAC,EACvCD,KAAiB,IAAKA,KAAK,CAACE,WAAW,CACzC;AAED,OAAO,MAAMC,eAAe,GAAGN,cAAc,CAC1CG,KAAY,IAAKA,KAAK,CAACF,SAAS,CAACG,KAAK,CAAC,EACvCD,KAAiB,IAAKA,KAAK,CAACI,YAAY,CAC1C;AAED,OAAO,MAAMC,YAAY,GAAGR,cAAc,CACvCG,KAAY,IAAKA,KAAK,CAACF,SAAS,CAACG,KAAK,CAAC,EACvCD,KAAiB,IAAKA,KAAK,CAACM,SAAS,CACvC"},"metadata":{},"sourceType":"module","externalDependencies":[]}